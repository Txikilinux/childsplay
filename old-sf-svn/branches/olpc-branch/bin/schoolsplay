#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright (c) 2006 Stas Zykiewicz <stas.zytkiewicz@gmail.com>
#
#           schoolsplay.py
# This program is free software; you can redistribute it and/or
# modify it under the terms of version 2 of the GNU General Public License
# as published by the Free Software Foundation.  A copy of this license should
# be included in the file GPL-2.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
import sys,os,traceback
# first parse commandline options
from schoolsplay.SPOptionParser import OParser
# if this doesn't bail out the options are correct and we continue with schoolsplay
op = OParser()
# this will return a class object with the options as attributes  
CMD_Options = op.get_options()

import schoolsplay.SPLogging as SPLogging
SPLogging.set_level(CMD_Options.loglevel)
SPLogging.start()

#create logger, configuration of logger was done above
import logging
module_logger = logging.getLogger("schoolsplay")
module_logger.debug("Created schoolsplay loggers")

import schoolsplay.utils as utils
# this will return the tuple (lang,rtl=bool)
LANG = utils.set_locale(lang=CMD_Options.lang)

if CMD_Options.admingui:
    # This will not return
    
    #start admingui
    sys.path.append('gui')
    try:
        import schoolsplay.gui.SPMainGui as SPMainGui
        SPMainGui.main(language=LANG)
    except Exception,info:
        module_logger.exception("GUI raised an exception")
        sys.exit(1)
    else:
        sys.exit(0)

# test the ocempgui version as we will crash on older versions
try:
    import ocempgui
except ImportError:
    print "=================== ERROR ========================="
    print "Schoolsplay needs the ocempgui library, see http://ocemp.sourceforge.net/"
    print "==================================================="
    sys.exit(1)
    
if not ocempgui.__version__ >= '0.2.4':
    print "=================== ERROR ========================="
    print " Your ocempgui version is %s" % ocempgui.__version__
    print "Schoolsplay need ocempgui version 0.2.4 or higher"
    print "See http://ocemp.sourceforge.net/"
    print "==================================================="
    sys.exit(1)
# check if we have sqlalchemy database support.
try:
    import sqlalchemy
except ImportError:
    module_logger.debug("No sqlalchemy package found, running in anonymousmode")
    CMD_Options.no_login = True   

import schoolsplay.SPMainCore as SPMainCore

from schoolsplay.SPgdm import GDMEscapeKeyException

# start the maincore, we only return here on an exit
module_logger.debug("Start logging")
module_logger.debug("commandline options: %s" % CMD_Options) 

abort = 0 
while not abort:
    try:
        # there's no support for other resolutions then 800x600
        mcgui = SPMainCore.MainCoreGui(resolution=(800,600),\
                                        options=CMD_Options,\
                                        language=LANG)
    except SPMainCore.MainEscapeKeyException:
        if CMD_Options.no_login:
            # we have no login screen so we exit
            sys.exit(0)
        module_logger.info("clean exit")
    except GDMEscapeKeyException:
        module_logger.info("clean exit")
        sys.exit(0)
    except SystemExit,status:
        if str(status) == '0':
            module_logger.info("clean exit")
        else:
            module_logger.info("not a clean exit")
    except Exception,status:        
        module_logger.exception("unhandled exception in toplevel, traceback follows:")
        abort = 1
    

